# Expense Tracker Program 

  

# Function to display the main menu 

def display_menu(): 

    print("\n=== Expense Tracker ===") 

    print("1. Add Expense") 

    print("2. View Expenses") 

    print("3. Remove Expense") 

    print("4. Exit") 

  

# Function to add an expense 

def add_expense(expenses): 

    name = input("Enter the name of the expense (e.g., 'Groceries'): ") 

    amount = float(input("Enter the amount spent: $")) 

    expenses.append((name, amount)) 

    print(f"Expense '{name}' of ${amount} added!") 

  

# Function to view all expenses 

def view_expenses(expenses): 

    if not expenses: 

        print("\nNo expenses recorded.") 

    else: 

        print("\n=== Expenses ===") 

        for idx, (name, amount) in enumerate(expenses, start=1): 

            print(f"{idx}. {name}: ${amount}") 

  

# Function to remove an expense 

def remove_expense(expenses): 

    if not expenses: 

        print("\nNo expenses to remove.") 

        return 

    view_expenses(expenses) 

    try: 

        expense_index = int(input("Enter the number of the expense to remove: ")) - 1 

        if 0 <= expense_index < len(expenses): 

            removed = expenses.pop(expense_index) 

            print(f"Removed expense: {removed[0]} of ${removed[1]}") 

        else: 

            print("Invalid number, please try again.") 

    except ValueError: 

        print("Invalid input, please enter a number.") 

  

# Function to save expenses to a file 

def save_expenses(expenses, filename="expenses.txt"): 

    with open(filename, 'w') as f: 

        for name, amount in expenses: 

            f.write(f"{name},{amount}\n") 

  

# Function to load expenses from a file 

def load_expenses(filename="expenses.txt"): 

    expenses = [] 

    try: 

        with open(filename, 'r') as f: 

            for line in f: 

                name, amount = line.strip().split(',') 

                expenses.append((name, float(amount))) 

    except FileNotFoundError: 

        pass  # If the file doesn't exist yet, just return an empty list 

    return expenses 

  

# Main function to run the expense tracker 

def main(): 

    # Load saved expenses from file 

    expenses = load_expenses() 

  

    while True: 

        # Display the menu 

        display_menu() 

  

        # Get user input 

        choice = input("Choose an option (1-4): ") 

  

        if choice == '1': 

            add_expense(expenses) 

        elif choice == '2': 

            view_expenses(expenses) 

        elif choice == '3': 

            remove_expense(expenses) 

        elif choice == '4': 

            # Save expenses before exiting 

            save_expenses(expenses) 

            print("Goodbye!") 

            break 

        else: 

            print("Invalid option, please try again.") 

  

if __name__ == "__main__": 

    main() 

 
